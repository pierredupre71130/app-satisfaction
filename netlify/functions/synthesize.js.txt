// Fichier : netlify/functions/synthesize.js

// Ceci est notre fonction serveur. Elle s'exécute sur Netlify, pas dans le navigateur.
exports.handler = async function(event) {

    // 1. Sécurité : On s'assure que la requête vient bien de notre app (méthode POST)
    if (event.httpMethod !== 'POST') {
        return { statusCode: 405, body: 'Method Not Allowed' };
    }

    try {
        // 2. On récupère le texte envoyé par le navigateur
        const { text } = JSON.parse(event.body);
        if (!text) {
            return { statusCode: 400, body: 'Missing text in request body' };
        }

        // 3. On récupère notre clé API secrète (stockée en toute sécurité sur Netlify)
        const apiKey = process.env.OPENAI_API_KEY;
        if (!apiKey) {
            // Cette erreur est pour nous, si on a oublié de configurer la clé sur Netlify
            return { statusCode: 500, body: 'API Key not configured' };
        }
        
        // 4. On prépare et on envoie la requête à l'API d'OpenAI
        const response = await fetch('https://api.openai.com/v1/chat/completions', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${apiKey}`
            },
            body: JSON.stringify({
                model: 'gpt-3.5-turbo', // Un modèle rapide et économique
                messages: [
                    {
                        role: 'system',
                        content: 'Tu es un assistant d\'analyse pour un référent de stage en santé. Analyse les retours de stagiaires (ESI et EAS) et identifie les points positifs, les points négatifs, et les suggestions d\'amélioration. Structure ta réponse avec les titres "### Points Positifs", "### Points Négatifs", et "### Suggestions". Utilise des listes à puces.'
                    },
                    {
                        role: 'user',
                        content: text // Le texte des commentaires/suggestions
                    }
                ]
            })
        });

        if (!response.ok) {
            console.error('OpenAI API error:', await response.text());
            return { statusCode: response.status, body: 'Error from OpenAI API' };
        }

        const result = await response.json();
        const synthesis = result.choices[0].message.content;

        // 5. On renvoie la synthèse au navigateur
        return {
            statusCode: 200,
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ synthesis: synthesis })
        };

    } catch (error) {
        console.error('Error in synthesize function:', error);
        return {
            statusCode: 500,
            body: JSON.stringify({ error: 'An internal error occurred' })
        };
    }
};